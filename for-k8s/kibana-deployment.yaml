apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: logging
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      containers:
      - name: kibana-logging
       #image: 172.168.200.50/cfss/kibana:6.5.4
        image: bitnami/kibana:latest
        imagePullPolicy: IfNotPresent
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch-logging:9200
          - name: SERVER_NAME
            value: kibana-logging
#          - name: SERVER_BASEPATH
#            value: /api/v1/namespaces/kube-system/services/kibana-logging/proxy
 #         - name: SERVER_REWRITEBASEPATH
 #           value: "false"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
#        livenessProbe:
#          httpGet:
#            path: /api/status
#            port: ui
#          initialDelaySeconds: 60
#          timeoutSeconds: 10
#        readinessProbe:
#          httpGet:
#            path: /api/status
#            port: ui
#          initialDelaySeconds: 60
#          timeoutSeconds: 10
